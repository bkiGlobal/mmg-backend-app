# Generated by Django 5.2.1 on 2025-05-15 03:35

import datetime
import django.db.models.deletion
import project.models
import team.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('project_proposal', 'Project Proposal'), ('feasibility_study', 'Feasibility Study'), ('design_blueprint', 'Design Blueprint'), ('contract_agreement', 'Contract Agreement'), ('subcontract_agreement', 'Subcontract Agreement'), ('purchase_order', 'Purchase Order'), ('permit_application', 'Permit Application'), ('insurance_document', 'Insurance Document'), ('daily_progress_report', 'Daily Progress Report'), ('weekly_progress_report', 'Weekly Progress Report'), ('monthly_progress_report', 'Monthly Progress Report'), ('inspection_report', 'Inspection Report'), ('meeting_minutes', 'Meeting Minutes'), ('payment_request', 'Payment Request'), ('invoice', 'Invoice'), ('budget_plan', 'Budget Plan'), ('material_delivery_order', 'Material Delivery Order'), ('usage_report', 'Usage Report'), ('safety_plan', 'Safety Plan'), ('accident_report', 'Accident Report'), ('handover_certificate', 'Handover Certificate'), ('warranty_document', 'Warranty Document')], max_length=50)),
                ('document_name', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_review', 'In Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('finalized', 'Finalized'), ('archived', 'Archived'), ('deleted', 'Deleted')], default='draft', max_length=20)),
                ('approval_required', models.BooleanField(default=True)),
                ('approval_level', models.CharField(blank=True, choices=[('level_1', 'Level 1'), ('level_2', 'Level 2'), ('level_3', 'Level 3')], max_length=20, null=True)),
                ('issue_date', models.DateField()),
                ('DueDate', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('document_file', models.FileField(upload_to=project.models.upload_document)),
                ('mime_type', models.CharField(blank=True, max_length=50)),
                ('document_number', models.CharField(max_length=255)),
                ('notes', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_number', models.CharField(max_length=255)),
                ('work_type', models.CharField(choices=[('foundation', 'Foundation'), ('structure', 'Structure'), ('finishing', 'Finishing'), ('architecture', 'Architecture'), ('mep', 'MEP'), ('other', 'Other')], max_length=20)),
                ('periode_start', models.DateTimeField()),
                ('periode_end', models.DateTimeField()),
                ('notes', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorLogDetail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.datetime(2025, 5, 15, 3, 35, 57, 65812, tzinfo=datetime.timezone.utc))),
                ('descriptions', models.TextField()),
                ('solutions', models.TextField()),
                ('open_date', models.DateField()),
                ('close_date', models.DateField()),
                ('photo_proof', models.ImageField(upload_to='')),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('resolved', 'Resolved'), ('unresolved', 'Unresolved'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled'), ('pending', 'Pending'), ('escalated', 'Escalated'), ('acknowledged', 'Acknowledged'), ('reopened', 'Reopened'), ('deferred', 'Deferred'), ('resolved_with_comments', 'Resolved with Comments')], default='open', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('project_code', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('progress', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('project_status', models.CharField(choices=[('on_going', 'On Going'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled'), ('delayed', 'Delayed')], default='on_going', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration', models.FloatField()),
                ('duration_in_field', models.FloatField(blank=True, null=True)),
                ('duration_for_client', models.FloatField(blank=True, null=True)),
                ('duration_type', models.CharField(choices=[('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months'), ('years', 'Years')], default='days', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('delayed', 'Delayed'), ('on_hold', 'On Hold'), ('rescheduled', 'Rescheduled'), ('overdue', 'Overdue'), ('not_started', 'Not Started'), ('in_review', 'In Review'), ('awaiting_approval', 'Awaiting Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled_by_client', 'Cancelled by Client')], default='approved', max_length=20)),
                ('notes', models.TextField()),
                ('attachment', models.ImageField(upload_to=project.models.upload_schedule_attachment)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignatureOnDeflect',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_proof', models.ImageField(upload_to=team.models.upload_signature_proof)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignatureOnDocument',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_proof', models.ImageField(upload_to=team.models.upload_signature_proof)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignatureOnErrorLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_proof', models.ImageField(upload_to=team.models.upload_signature_proof)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignatureOnWorkMethod',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_proof', models.ImageField(upload_to=team.models.upload_signature_proof)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeeklyReport',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('week_number', models.IntegerField()),
                ('report_date', models.DateField()),
                ('Progress_percentage', models.FloatField()),
                ('notes', models.TextField()),
                ('attachment', models.ImageField(upload_to=project.models.upload_weekly_report_attachment)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkMethod',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('work_title', models.CharField(max_length=255)),
                ('document_number', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to=project.models.upload_work_method_photo)),
                ('notes', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deflect',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('work_title', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeflectDetail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_detail', models.CharField(max_length=255)),
                ('deviation', models.FloatField()),
                ('initial_checklist_date', models.DateTimeField()),
                ('final_checklist_date', models.DateTimeField()),
                ('notes', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('deflect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deflect_detail', to='project.deflect')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
